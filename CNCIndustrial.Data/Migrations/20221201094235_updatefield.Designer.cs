// <auto-generated />
using System;
using CNCIndustrial.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CNCIndustrial.Data.Migrations
{
    [DbContext(typeof(CncIndustrialDbContext))]
    [Migration("20221201094235_updatefield")]
    partial class updatefield
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CNCIndustrial.Data.Entities.AboutUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Founding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutUss");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.AboutUsTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutUsId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Founding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AboutUsId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AboutUsTranslations");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            Value = "This is home page of CNCTechIndustrial"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            Value = "This is keyword of CNCTechIndustrial"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            Value = "This is description of CNCTechIndustrial"
                        });
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("583b332a-9d8b-4b9c-b502-1f48d02b9ec7"),
                            ConcurrencyStamp = "a2b5d691-e85c-4df0-8384-e55f9e556fb1",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e23c9b99-51d5-4f0e-a15b-9b5d6b4c9507"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "182b3b95-ca7b-43d9-87e4-aa4f5ba2c990",
                            Dob = new DateTime(2000, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tanhdo18@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Tuan Anh",
                            LockoutEnabled = false,
                            NormalizedEmail = "tanhdo18@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEMCDBl+OdF/i2xKpkBVXtUSEG2pcgI6DjoeU39ibmatmrjOzkQQRZ++E2TlmSwxCfA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsShowOnHome")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsShowOnHome = true,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            IsShowOnHome = true,
                            SortOrder = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            IsShowOnHome = true,
                            SortOrder = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            IsShowOnHome = true,
                            SortOrder = 4,
                            Status = 1
                        });
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.CategoryTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CategoryTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            LanguageId = "vi",
                            Name = "Vĩnh Phúc",
                            SeoAlias = "Vinh-Phuc",
                            SeoDescription = "Khu công nghiệp Vĩnh Phúc",
                            SeoTitle = "Khu công nghiệp Vĩnh Phúc"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            LanguageId = "en",
                            Name = "Vinh Phuc",
                            SeoAlias = "Vinh-Phuc",
                            SeoDescription = "Vinh Phuc Industrial Park",
                            SeoTitle = "Vinh Phuc Industrial Park"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            LanguageId = "ko-kr",
                            Name = "Vinh Phuc",
                            SeoAlias = "Vinh-Phuc",
                            SeoDescription = "빈푹산업단지",
                            SeoTitle = "빈푹산업단지"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            LanguageId = "ja-jp",
                            Name = "Vinh Phuc",
                            SeoAlias = "Vinh-Phuc",
                            SeoDescription = "ビンフック工業団地",
                            SeoTitle = "ビンフック工業団地"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            LanguageId = "zh-cn",
                            Name = "Vinh Phuc",
                            SeoAlias = "永福",
                            SeoDescription = "永福工業園",
                            SeoTitle = "永福工業園"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            LanguageId = "vi",
                            Name = "Bắc Ninh",
                            SeoAlias = "Bac-Ninh",
                            SeoDescription = "Khu công nghiệp Bắc Ninh",
                            SeoTitle = "Khu công nghiệp Bắc Ninh"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            LanguageId = "en",
                            Name = "Bac Ninh",
                            SeoAlias = "Bac-Ninh",
                            SeoDescription = "Bac Ninh Industrial Park",
                            SeoTitle = "Bac Ninh Industrial Park"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            LanguageId = "ko-kr",
                            Name = "Bac Ninh",
                            SeoAlias = "Bac-Ninh",
                            SeoDescription = "박닌 산업단지",
                            SeoTitle = "박닌 산업단지"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            LanguageId = "ja-jp",
                            Name = "Bac Ninh",
                            SeoAlias = "Bac-Ninh",
                            SeoDescription = "バクニン工業団地",
                            SeoTitle = "バクニン工業団地"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            LanguageId = "zh-cn",
                            Name = "Bac Ninh",
                            SeoAlias = "Bac-Ninh",
                            SeoDescription = "永福工業園",
                            SeoTitle = "永福工業園"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            LanguageId = "vi",
                            Name = "Hà Nam",
                            SeoAlias = "Ha-Nam",
                            SeoDescription = "Khu công nghiệp Hà Nam",
                            SeoTitle = "Khu công nghiệp Hà Nam"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            LanguageId = "en",
                            Name = "Ha Nam",
                            SeoAlias = "Ha-Nam",
                            SeoDescription = "Ha Nam Industrial Park",
                            SeoTitle = "Ha Nam Industrial Park"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            LanguageId = "ko-kr",
                            Name = "Ha Nam",
                            SeoAlias = "Ha-Nam",
                            SeoDescription = "하남산업단지",
                            SeoTitle = "하남산업단지"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            LanguageId = "ja-jp",
                            Name = "Ha Nam",
                            SeoAlias = "Ha-Nam",
                            SeoDescription = "ハナム工業団地",
                            SeoTitle = "ハナム工業団地"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            LanguageId = "zh-cn",
                            Name = "Ha Nam",
                            SeoAlias = "Ha-Nam",
                            SeoDescription = "河南工業園區",
                            SeoTitle = "河南工業園區"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            LanguageId = "vi",
                            Name = "TP. Hồ Chí Minh",
                            SeoAlias = "Tp-Ho-Chi-Minh",
                            SeoDescription = "Khu công nghiệp thành phố Hồ Chí Minh",
                            SeoTitle = "Khu công nghiệp thành phố Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 4,
                            LanguageId = "en",
                            Name = "Ho Chi Minh City",
                            SeoAlias = "Ho-Chi-Minh-City",
                            SeoDescription = "Ho Chi Minh City Industrial Park",
                            SeoTitle = "Ho Chi Minh City Industrial Park"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            LanguageId = "ko-kr",
                            Name = "호치민시",
                            SeoAlias = "Ho-Chi-Minh-City",
                            SeoDescription = "호치민시 산업단지",
                            SeoTitle = "호치민시 산업단지"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            LanguageId = "ja-jp",
                            Name = "ホーチミン市",
                            SeoAlias = "Ho-Chi-Minh-City",
                            SeoDescription = "ホーチミン市工業団地",
                            SeoTitle = "ホーチミン市工業団地"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            LanguageId = "zh-cn",
                            Name = "胡志明市",
                            SeoAlias = "Ho-Chi-Minh-City",
                            SeoDescription = "胡志明市工業園區",
                            SeoTitle = "胡志明市工業園區"
                        });
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("HotlineChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotlineEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotlineJa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotlineKo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotlineVN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iframe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = "vi",
                            IsDefault = true,
                            Name = "Tiếng Việt"
                        },
                        new
                        {
                            Id = "en",
                            IsDefault = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = "ko-kr",
                            IsDefault = false,
                            Name = "Korea"
                        },
                        new
                        {
                            Id = "ja-jp",
                            IsDefault = false,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = "zh-cn",
                            IsDefault = false,
                            Name = "China"
                        });
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.NewsTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnhMinhHoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDangNhap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NewsPostIndustrials");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.NewsTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageId")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("NewsTableId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NewsTableId");

                    b.ToTable("NewsPostTranslations");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.ProjectImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectImages");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.ProjectInCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectInCategories");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.ProjectLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("iframeMap")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2022, 12, 1, 16, 42, 34, 506, DateTimeKind.Local).AddTicks(2700),
                            OriginalPrice = 100000m,
                            Price = 200000m,
                            Stock = 0,
                            ViewCount = 0,
                            iframeMap = "Http://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3716.8211643267987!2d105.68034141461068!3d21.318081685842323!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3134e5dadc526c53%3A0xeb6c8f677c9262da!2zS2h1IGPDtG5nIG5naGnhu4dwIGLDoSB0aGnhu4duIDE!5e0!3m2!1svi!2s!4v1668825924376!5m2!"
                        });
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.ProjectTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessibilityAirport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessibilityCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessibilityExpressway")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessibilityPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commerce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainFunction1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainFunction2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainFunction3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainFunction4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technical")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacantArea")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTranslations");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e23c9b99-51d5-4f0e-a15b-9b5d6b4c9507"),
                            RoleId = new Guid("583b332a-9d8b-4b9c-b502-1f48d02b9ec7")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.AboutUsTranslation", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AboutUs", "AboutUs")
                        .WithMany("AboutUsTranslations")
                        .HasForeignKey("AboutUsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNCIndustrial.Data.Entities.Employee", "Employees")
                        .WithMany("AboutUsTranslations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNCIndustrial.Data.Entities.Language", "Language")
                        .WithMany("AboutUsTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.CategoryTranslation", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.Category", "Category")
                        .WithMany("CategoryTranslations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNCIndustrial.Data.Entities.Language", "Language")
                        .WithMany("CategoryTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.Contact", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AppUser", "AppUser")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.Employee", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AppUser", "AppUser")
                        .WithMany("Employees")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.NewsTranslation", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.Language", "Language")
                        .WithMany("NewsTranslations")
                        .HasForeignKey("LanguageId");

                    b.HasOne("CNCIndustrial.Data.Entities.NewsTable", "NewsTable")
                        .WithMany("NewsTranslations")
                        .HasForeignKey("NewsTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.ProjectImage", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.ProjectLocation", "Project")
                        .WithMany("ProjectImages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.ProjectInCategory", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.Category", "Category")
                        .WithMany("ProjectInCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNCIndustrial.Data.Entities.ProjectLocation", "Project")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CNCIndustrial.Data.Entities.ProjectTranslation", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.Language", "Languages")
                        .WithMany("ProjectTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNCIndustrial.Data.Entities.ProjectLocation", "Project")
                        .WithMany("ProjectTranslations")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNCIndustrial.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("CNCIndustrial.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
